DROP INDEX idx_pb_setup_pbs_period_to_PDV1 ON dbo.PB_Setup;
drop view POP_Additional_Info
drop function fn_Dates
ALTER TABLE CLAIM_HEAD DROP COLUMN WH_DISTRIBUTOR;
ALTER TABLE PHYSICAL_STOCK DROP COLUMN WH_DISTRIBUTOR;
ALTER TABLE PRODUCT DROP COLUMN VOLUME1;
ALTER TABLE PRODUCT DROP COLUMN VOLUME2;
ALTER TABLE PRODUCT DROP COLUMN VOLUME3;
ALTER TABLE STOCK_BATCH DROP COLUMN WH_DISTRIBUTOR;
ALTER TABLE STOCK_BATCH_DAILY DROP COLUMN WH_DISTRIBUTOR;
ALTER TABLE TAX_INVOICE DROP COLUMN TAX_INVOICE_NUMBER;
ALTER TABLE WAREHOUSE DROP COLUMN WH_DISTRIBUTOR;
ALTER TABLE WAREHOUSE_DISTRIBUTOR_MAPPING DROP COLUMN WH_DISTRIBUTOR;
drop function SPLITVARMAX
drop function UDF_FCS
drop function UDF_FCS_PJP
drop function MultiValueParamsSplit


USE [master];
GO
ALTER DATABASE [centegy_sndpro_uet_new] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
GO
ALTER DATABASE [centegy_sndpro_uet_new] COLLATE SQL_Latin1_General_CP1_CI_AS;
GO
ALTER DATABASE [centegy_sndpro_uet_new] SET MULTI_USER;
GO


--Rebuild the IROW_ver Columns of all the TABLESPACE
USE CEntegy_sndpro_uet
GO

DECLARE @TableName NVARCHAR(255)
DECLARE @Sql NVARCHAR(MAX)

DECLARE TableCursor CURSOR FOR
SELECT TABLE_NAME
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME IN (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'IROW_Ver')

OPEN TableCursor

FETCH NEXT FROM TableCursor INTO @TableName

WHILE @@FETCH_STATUS = 0
BEGIN
    SET @Sql = 'USE centegy_sndpro_uet_new; ' +
               'ALTER TABLE ' + @TableName + ' ADD IROW_VER AS (convert([bigint], [ROW_VER], (0))) PERSISTED;'
    EXEC sp_executesql @Sql

    FETCH NEXT FROM TableCursor INTO @TableName
END

CLOSE TableCursor
DEALLOCATE TableCursor


--REbuild the calculated COLUMNS
use centegy_sndpro_uet_new
ALTER TABLE [stock_batch] add [WH_DISTRIBUTOR]  AS ([DISTRIBUTOR]) PERSISTED NOT NULL
ALTER TABLE [stock_batch_daily] add [WH_DISTRIBUTOR]  AS ([DISTRIBUTOR]) PERSISTED NOT NULL
ALTER TABLE WAREHOUSE add [WH_DISTRIBUTOR]  AS ([DISTRIBUTOR]) PERSISTED NOT NULL
ALTER TABLE WAREHOUSE_DISTRIBUTOR_MAPPING add [WH_DISTRIBUTOR]  AS ([DISTRIBUTOR]) PERSISTED NOT NULL
ALTER TABLE PHYSICAL_STOCK add [WH_DISTRIBUTOR]  AS ([DISTRIBUTOR]) PERSISTED NOT NULL
ALTER TABLE CLAIM_HEAD ADD [WH_DISTRIBUTOR]  AS ([DISTRIBUTOR]) PERSISTED NOT NULL
ALTER TABLE [product] ADD [VOLUME1]  AS ((isnull([LENGTH1],(0))*isnull([WIDTH1],(0)))*isnull([HEIGHT1],(0))) PERSISTED,
						  [VOLUME2]  AS ((isnull([LENGTH2],(0))*isnull([WIDTH2],(0)))*isnull([HEIGHT2],(0))) PERSISTED,
						  [VOLUME3]  AS ((isnull([LENGTH3],(0))*isnull([WIDTH3],(0)))*isnull([HEIGHT3],(0))) PERSISTED
ALTER TABLE TAX_INVOICE ADD
	[TAX_INVOICE_NUMBER]  AS ((((((([TRANSACTION_TYPE]+[TRANSACTION_STATUS])+'.')+
	[TAX_BRANCH_CODE])+'-')+right([TAX_YEAR],(2)))+'.')+right('00000000'+CONVERT([varchar](8),[TAX_INVOICE_SERIAL],(0)),(8)))


--Rebuild the indexes that were dropped
CREATE NONCLUSTERED INDEX [idx_pb_setup_pbs_period_to_PDV1] ON [dbo].[pb_setup]
(
	[pbs_period_to] ASC
)
INCLUDE ( 	[pbs_mp_code],
	[pbs_seqid],
	[pbs_procedure],
	[ALLOCATION_ON],
	[COMPANY],
	[TEST_SCHEME],
	[ROW_VER],
	[IROW_VER]) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 80)
GO

--Rebuild the views
CREATE VIEW [dbo].[POP_Additional_Info]
AS
SELECT PT.LDESC 'POP_TYPE' ,PR.LDESC 'POP_RANK' ,ISNULL (POP.SHOP_NO,'')+' '+ISNULL(POP.MARKET_NAME, ' ')+' '+ISNULL (POP.STREET,'') 'Address', POP.* 
from POP AS POP INNER JOIN POP_TYPE As PT 
ON (POP.COMPANY =PT.COMPANY ) AND
   (POP.POPTYPE=PT.POPTYPE) 
INNER JOIN POP_RANK AS PR ON 
(POP.COMPANY =PR.COMPANY ) AND
(POP.RANK=PR.RANK)
GO

--Rebuild the functions

CREATE FUNCTION [dbo].[UDF_FCS](@COMPANY VARCHAR(MAX), @DISTRIBUTOR VARCHAR(MAX), @PROCESS_DATE DATETIME)
    RETURNS @FCS_DATA TABLE (
    	COMPANY VARCHAR(MAX) NOT NULL,
    	DISTRIBUTOR VARCHAR(MAX) NOT NULL,
    	DSR VARCHAR(MAX) NOT NULL,
    	SUB_ELEMENT VARCHAR(MAX) NOT NULL,
    	YEAR VARCHAR(MAX) NOT NULL,
    	JCNO VARCHAR(MAX) NOT NULL,
    	WEEK_NO VARCHAR(MAX) NOT NULL,
    	SCH_WK INT,  
    	UQ_SCH_WK_JC INT,  
    	PRD_WK INT,  
    	UQ_PRD_WK_JC INT,	 
    	LPPC_WK INT) 
    AS
    BEGIN
    DECLARE @YEAR VARCHAR(MAX), @JCNO VARCHAR(MAX), @JCSDATE DATETIME, @JCEDATE DATETIME, @YEARJC VARCHAR(MAX);
    SELECT @YEAR = JC.YEAR, @JCNO = JC.JCNO , @JCSDATE = JC.START_DATE, @JCEDATE = JC.END_DATE ,@YEARJC =  RIGHT(YEAR,2)+JCNO
    FROM J_CYCLE JC WHERE JC.COMPANY = @COMPANY AND  CONVERT(DATETIME,@PROCESS_DATE,103) BETWEEN JC.START_DATE AND JC.END_DATE;
    
    WITH JW AS (SELECT JC.COMPANY, JC.YEAR, CONVERT(DATETIME,@PROCESS_DATE,103) PROCESS_DATE
    			, JC.JCNO, JC.START_DATE JC_START_DATE, JC.END_DATE JC_END_DATE
    			, JW.WEEK_NO, JW.START_DATE JW_START_DATE, JW.END_DATE JW_END_DATE
    			FROM J_CYCLE JC INNER JOIN JC_WEEK JW ON JC.COMPANY = JW.COMPANY AND JC.YEAR = JW.YEAR AND JC.JCNO = JW.JCNO
    			WHERE JW.COMPANY = @COMPANY AND  CONVERT(DATETIME,@PROCESS_DATE,103) BETWEEN JC.START_DATE AND JC.END_DATE )
    , D AS (SELECT COMPANY, DISTRIBUTOR, DSR FROM DSR WHERE COMPANY = @COMPANY AND DISTRIBUTOR = @DISTRIBUTOR AND JOB_TYPE IN ('01','03') AND FCS = 1)
    , PR_CM AS (SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, CM.PJP, CM.SELL_CATEGORY, CM.SECTION, JW.YEAR, JW.JCNO, JW.WEEK_NO, CM.DELV_DATE
    			, CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, P.SUB_ELEMENT
    			, MIN(CM.DOC_DATE) DOC_DATE
    			FROM CASHMEMO CM
    			INNER JOIN JW ON CM.COMPANY = JW.COMPANY AND CM.DELV_DATE BETWEEN JW.JW_START_DATE AND JW.JW_END_DATE
    			AND CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = 'CM' AND CM.SUB_DOCUMENT IN ('01','04') AND CM.VISIT_TYPE <> '88'
    			INNER JOIN D ON D.COMPANY = CM.COMPANY AND D.DISTRIBUTOR = CM.DISTRIBUTOR AND D.DSR = CM.DSR
    			INNER JOIN POP P ON P.COMPANY = CM.COMPANY AND P.DISTRIBUTOR = CM.DISTRIBUTOR 
    			AND P.TOWN = CM.TOWN AND P.LOCALITY = CM.LOCALITY AND P.SLOCALITY = CM.SLOCALITY AND P.POP = CM.POP
    			GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, CM.PJP, CM.SELL_CATEGORY, CM.SECTION, JW.YEAR, JW.JCNO, JW.WEEK_NO, CM.DELV_DATE
    			, CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, P.SUB_ELEMENT
    			HAVING SUM(CM.NET_AMOUNT) > 0)
    , PR_SEC AS (SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.PJP, CM.DOC_DATE, CM.SELL_CATEGORY/*, CM.SECTION*/, CM.YEAR, CM.JCNO, CM.WEEK_NO
    			FROM PR_CM CM
    			GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.PJP, CM.DOC_DATE, CM.SELL_CATEGORY/*, CM.SECTION*/, CM.YEAR, CM.JCNO, CM.WEEK_NO)
    , PS AS (SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP, PS.STATUS_DATE, PS.SELL_CATEGORY, PS.SECTION
    		, PS.DSR, PR.YEAR, PR.JCNO, PR.WEEK_NO, P.SUB_ELEMENT
    		, ROW_NUMBER() OVER(PARTITION BY PS.COMPANY, PS.DISTRIBUTOR, PS.DSR, P.SUB_ELEMENT,PR.YEAR, PR.JCNO, PR.WEEK_NO ORDER BY  PS.STATUS_DATE) SP_WK
    		, CASE ROW_NUMBER() OVER(PARTITION BY PS.COMPANY, PS.DISTRIBUTOR, PS.DSR, PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP, PR.JCNO ORDER BY  PS.STATUS_DATE) WHEN 1 THEN 1 ELSE NULL END USP_JC
    		FROM (SELECT COMPANY,DISTRIBUTOR,PJP,TOWN,LOCALITY,SLOCALITY,POP,STATUS_DATE,DSR,SELL_CATEGORY,SECTION
    				FROM POP_STATUS
    				UNION ALL
    				SELECT DISTINCT COMPANY,DISTRIBUTOR,PJP,TOWN,LOCALITY,SLOCALITY,POP,DOC_DATE STATUS_DATE,DSR,SELL_CATEGORY,SECTION
    				FROM CASHMEMO CM
    				WHERE CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = 'CM' AND CM.SUB_DOCUMENT = '01' AND CM.VISIT_TYPE <> '88' AND CM.DELV_DATE BETWEEN @JCSDATE AND @JCEDATE AND CM.NET_AMOUNT > 0  
    				AND NOT EXISTS (SELECT 1 FROM POP_STATUS B 
    								WHERE CM.COMPANY = B.COMPANY AND CM.DISTRIBUTOR = B.DISTRIBUTOR AND CM.PJP = B.PJP AND CM.TOWN = B.TOWN 
    								AND CM.LOCALITY = B.LOCALITY AND CM.SLOCALITY = B.SLOCALITY AND CM.POP = B.POP 
    								AND CM.DOC_DATE = B.STATUS_DATE AND CM.SELL_CATEGORY = B.SELL_CATEGORY AND CM.SECTION = B.SECTION )	
    			  ) PS 
    		INNER JOIN PR_SEC PR ON PR.COMPANY = PS.COMPANY AND PR.DISTRIBUTOR = PS.DISTRIBUTOR AND PR.PJP = PS.PJP AND PR.DOC_DATE = PS.STATUS_DATE AND PR.SELL_CATEGORY = PS.SELL_CATEGORY /*AND PR.SECTION = PS.SECTION*/
    		INNER JOIN POP P ON P.COMPANY = PS.COMPANY AND P.DISTRIBUTOR = PS.DISTRIBUTOR 
    		AND P.TOWN = PS.TOWN AND P.LOCALITY = PS.LOCALITY AND P.SLOCALITY = PS.SLOCALITY AND P.POP = PS.POP	)
    , TR_FCS AS (SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.SUB_ELEMENT, PS.DSR, JW.YEAR,JW.JCNO,JW.WEEK_NO
    			FROM PS JOIN JW ON JW.COMPANY = PS.COMPANY
    			GROUP BY PS.COMPANY, PS.DISTRIBUTOR, PS.SUB_ELEMENT, PS.DSR, JW.YEAR,JW.JCNO,JW.WEEK_NO)
    , PSC AS (SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.DSR, PS.SUB_ELEMENT, PS.YEAR,PS.JCNO, PS.WEEK_NO
    		, MAX(PS.SP_WK) S_WK, COUNT(PS.USP_JC) US_JC
    		FROM PS 
    		GROUP BY  PS.COMPANY, PS.DISTRIBUTOR, PS.DSR, PS.SUB_ELEMENT, PS.YEAR,PS.JCNO, PS.WEEK_NO)
    , PP AS (SELECT PP.COMPANY, PP.DISTRIBUTOR, PP.PJP, PP.TOWN, PP.LOCALITY, PP.SLOCALITY, PP.POP, PP.DOC_DATE, PP.SELL_CATEGORY, PP.SECTION
    		, PP.DSR, PP.YEAR, PP.JCNO, PP.WEEK_NO, PP.SUB_ELEMENT
    		, ROW_NUMBER() OVER(PARTITION BY PP.COMPANY, PP.DISTRIBUTOR, PP.DSR, PP.SUB_ELEMENT,PP.YEAR, PP.JCNO, PP.WEEK_NO ORDER BY  PP.DOC_DATE) PP_WK
    		, CASE ROW_NUMBER() OVER(PARTITION BY PP.COMPANY, PP.DISTRIBUTOR, PP.DSR, PP.TOWN, PP.LOCALITY, PP.SLOCALITY, PP.POP, PP.JCNO ORDER BY  PP.DOC_DATE) WHEN 1 THEN 1 ELSE NULL END UPP_JC
    		FROM PR_CM PP)
    , PPC AS (SELECT PP.COMPANY, PP.DISTRIBUTOR, PP.DSR, PP.SUB_ELEMENT, PP.YEAR,PP.JCNO, PP.WEEK_NO
    		, MAX(PP.PP_WK) P_WK, COUNT(PP.UPP_JC) UP_JC
    		FROM PP 
    		GROUP BY  PP.COMPANY, PP.DISTRIBUTOR, PP.DSR, PP.SUB_ELEMENT, PP.YEAR,PP.JCNO, PP.WEEK_NO)
    , PR_CDL AS (SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, P.SUB_ELEMENT, JW.YEAR, JW.JCNO, JW.WEEK_NO, CM.DELV_DATE, CM.PJP, CM.SELL_CATEGORY, CM.SECTION
    			, CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CD.SKU
    			, SUM(CD.AMOUNT) AMT, SUM(CD.QTY1 * B.SELL_FACTOR1 + CD.QTY2 * B.SELL_FACTOR2 + CD.QTY3 * B.SELL_FACTOR3) QTY
    			, SUM(CD.QTY1 * B.SELL_WEIGHT1 + CD.QTY2 * B.SELL_WEIGHT2 + CD.QTY3 * B.SELL_WEIGHT3) VOL
    			, MIN(CM.DOC_DATE) DOC_DATE
    			FROM CASHMEMO CM
    			INNER JOIN CASHMEMO_DETAIL CD ON CM.COMPANY = CD.COMPANY AND CM.DISTRIBUTOR = CD.DISTRIBUTOR 
    			AND CM.DOCUMENT = CD.DOCUMENT AND CM.SUB_DOCUMENT = CD.SUB_DOCUMENT AND CM.DOC_NO = CD.DOC_NO
    			INNER JOIN BATCH B ON CD.COMPANY = B.COMPANY AND CD.SKU = B.SKU AND B.BATCH = CD.BATCH
    			INNER JOIN JW ON CM.COMPANY = JW.COMPANY AND CM.DELV_DATE BETWEEN JW.JW_START_DATE AND JW.JW_END_DATE
    			AND CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = 'CM' AND CM.SUB_DOCUMENT IN ('01','04') AND CM.VISIT_TYPE <> '88'
    			INNER JOIN D ON D.COMPANY = CM.COMPANY AND D.DISTRIBUTOR = CM.DISTRIBUTOR AND D.DSR = CM.DSR
    			INNER JOIN POP P ON P.COMPANY = CM.COMPANY AND P.DISTRIBUTOR = CM.DISTRIBUTOR 
    			AND P.TOWN = CM.TOWN AND P.LOCALITY = CM.LOCALITY AND P.SLOCALITY = CM.SLOCALITY AND P.POP = CM.POP
    			GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, P.SUB_ELEMENT, JW.YEAR, JW.JCNO, JW.WEEK_NO, CM.DELV_DATE, CM.PJP, CM.SELL_CATEGORY, CM.SECTION
    			, CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CD.SKU
    			HAVING SUM(CD.AMOUNT) > 0)
    , POL AS (SELECT P.COMPANY, P.POLICY_ID FROM POLICY P WHERE P.FIELD_GROUP = '202' AND P.STATUS = 1 )
    , POL_DST AS (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM DISTRIBUTOR FROM POL A LEFT JOIN POLICY_DETAIL PD ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'DISTRIBUTOR')
    , POL_QDST AS (SELECT A.COMPANY, A.POLICY_ID, B.DISTRIBUTOR FROM POL_DST A INNER JOIN DISTRIBUTOR B ON A.COMPANY = B.COMPANY AND ISNULL(A.DISTRIBUTOR,B.DISTRIBUTOR) = B.DISTRIBUTOR)
    , POL_SE AS (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM SUB_ELEMENT FROM POL A LEFT JOIN POLICY_DETAIL PD ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'SUB_ELEMENT')
    , POL_QSE AS (SELECT A.COMPANY, A.POLICY_ID, B.SUB_ELEMENT FROM POL_SE A INNER JOIN SUB_ELEMENT B ON A.COMPANY = B.COMPANY AND ISNULL(A.SUB_ELEMENT,B.SUB_ELEMENT) = B.SUB_ELEMENT)
    , POL_JC AS (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM [YEAR~JCNO] FROM POL A LEFT JOIN POLICY_DETAIL PD ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'YEAR~JCNO')
    , POL_QJC AS (SELECT A.COMPANY, A.POLICY_ID, B.YEAR, B.JCNO FROM POL_JC A INNER JOIN J_CYCLE B ON A.COMPANY = B.COMPANY AND ISNULL(A.[YEAR~JCNO],B.YEAR+'~'+B.JCNO) = B.YEAR+'~'+B.JCNO)
    , POL_SKU AS (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM SKU FROM POL A LEFT JOIN POLICY_DETAIL PD ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'SKU')
    , POL_QSKU AS (SELECT A.COMPANY, A.POLICY_ID, B.SKU SKU FROM POL_SKU A INNER JOIN SKU B ON A.COMPANY = B.COMPANY AND ISNULL(A.SKU,B.SKU) = B.SKU)
    , POL_FC AS (SELECT P.COMPANY,P.POLICY_ID
    			, C.YEAR , C.JCNO , A.DISTRIBUTOR,B.SUB_ELEMENT,D.SKU 
    			, PS.SLAB_ID, PS.QTY_FROM, PS.QTY_TO, PS.AMOUNT_FROM, PS.AMOUNT_TO, PS.WEIGHT_FROM , PS.WEIGHT_TO		
    			FROM POL P JOIN POL_QDST A ON P.COMPANY = A.COMPANY AND P.POLICY_ID = A.POLICY_ID 
    			JOIN POL_QSE B ON P.COMPANY = B.COMPANY AND P.POLICY_ID = B.POLICY_ID
    			JOIN POL_QJC C ON P.COMPANY = C.COMPANY AND P.POLICY_ID = C.POLICY_ID
    			JOIN POL_QSKU D ON P.COMPANY = D.COMPANY AND P.POLICY_ID = D.POLICY_ID
    			JOIN POLICY_SLAB PS ON P.COMPANY = PS.COMPANY AND P.POLICY_ID = PS.POLICY_ID
    			WHERE P.COMPANY = @COMPANY AND A.DISTRIBUTOR = @DISTRIBUTOR AND C.YEAR = @YEAR AND C.JCNO=@JCNO )
    , PR_CDL_QR AS (SELECT A.COMPANY, A.DISTRIBUTOR, A.DSR, A.SUB_ELEMENT, A.YEAR, A.JCNO, A.WEEK_NO
    				FROM PR_CDL A 
    				WHERE NOT EXISTS (	SELECT 1 
    									FROM POL_FC B 
    									WHERE A.COMPANY = B.COMPANY AND A.DISTRIBUTOR = B.DISTRIBUTOR 
    									AND A.YEAR = B.YEAR AND A.JCNO = B.JCNO 
    									AND A.SUB_ELEMENT = B.SUB_ELEMENT AND A.SKU = B.SKU 
    									AND A.QTY NOT BETWEEN B.QTY_FROM AND B.QTY_TO  
    									AND A.AMT NOT BETWEEN B.AMOUNT_FROM AND B.AMOUNT_TO  
    									AND A.VOL NOT BETWEEN B.WEIGHT_FROM AND B.WEIGHT_TO		) )
    , LPPC AS (SELECT A.COMPANY, A.DISTRIBUTOR, A.DSR, A.SUB_ELEMENT, A.YEAR , A.JCNO, A.WEEK_NO
    			, COUNT(1) LPPC_WK
    			FROM PR_CDL_QR A
    			GROUP BY A.COMPANY, A.DISTRIBUTOR, A.DSR, A.SUB_ELEMENT, A.YEAR , A.JCNO, A.WEEK_NO)
    , FCS AS (SELECT COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO,WEEK_NO
    		, S_WK		, US_JC 		, 0 P_WK		,0 UP_JC		, 0 LPPC_WK
    		FROM PSC
    		UNION ALL
    		SELECT COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO,WEEK_NO
    		, 0 S_WK		, 0 US_JC		, P_WK		,UP_JC		, 0 LPPC_WK
    		FROM PPC
    		UNION ALL
    		SELECT COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO,WEEK_NO
    		, 0 S_WK		, 0 US_JC		, 0 P_WK		, 0 UP_JC		, LPPC_WK
    		FROM LPPC
    		UNION ALL
    		SELECT COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO,WEEK_NO
    		, 0 S_WK		, 0 US_JC		, 0 P_WK		, 0 UP_JC		, 0 LPPC_WK
    		FROM TR_FCS)
    INSERT INTO @FCS_DATA (COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO ,WEEK_NO
    ,SCH_WK , UQ_SCH_WK_JC, PRD_WK, UQ_PRD_WK_JC, LPPC_WK 
    )
    SELECT COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO,WEEK_NO
    , SUM(S_WK) S_WK, SUM(US_JC) US_JC, SUM(P_WK) P_WK, SUM(UP_JC) UP_JC, SUM(LPPC_WK) LPPC_WK
    FROM FCS
    GROUP BY COMPANY,DISTRIBUTOR,DSR,SUB_ELEMENT,YEAR,JCNO,WEEK_NO
       RETURN;
END;

GO


CREATE FUNCTION [dbo].[UDF_FCS_PJP](@COMPANY VARCHAR(MAX), @DISTRIBUTOR VARCHAR(MAX), @PROCESS_DATE DATETIME)
    RETURNS @FCS_DATA TABLE (
      COMPANY VARCHAR(MAX) NOT NULL,
      DISTRIBUTOR VARCHAR(MAX) NOT NULL,
      PJP VARCHAR(MAX) NOT NULL,
      YEAR VARCHAR(MAX) NOT NULL,
      JCNO VARCHAR(MAX) NOT NULL,
      WEEK_NO VARCHAR(MAX) NOT NULL,
      SCH_WK INT,  
      UQ_SCH_WK_JC INT,  
      PRD_WK INT,  
      UQ_PRD_WK_JC INT, 
      LPPC_WK INT) 
    AS
    BEGIN
    DECLARE @YEAR VARCHAR(MAX), @JCNO VARCHAR(MAX), @JCSDATE DATETIME, @JCEDATE DATETIME, @YEARJC VARCHAR(MAX);
    SELECT @YEAR = JC.YEAR, @JCNO = JC.JCNO , @JCSDATE = JC.START_DATE, @JCEDATE = JC.END_DATE ,@YEARJC =  RIGHT(YEAR,2)+JCNO
    FROM J_CYCLE JC WHERE JC.COMPANY = @COMPANY AND  CONVERT(DATETIME,@PROCESS_DATE,103) BETWEEN JC.START_DATE AND JC.END_DATE;
    
    WITH JW AS (SELECT JC.COMPANY, JC.YEAR, CONVERT(DATETIME,@PROCESS_DATE,103) PROCESS_DATE
                  , JC.JCNO, JC.START_DATE JC_START_DATE, JC.END_DATE JC_END_DATE
                  , JW.WEEK_NO, JW.START_DATE JW_START_DATE, JW.END_DATE JW_END_DATE
                  FROM J_CYCLE JC INNER JOIN JC_WEEK JW ON JC.COMPANY = JW.COMPANY AND JC.YEAR = JW.YEAR AND JC.JCNO = JW.JCNO
                  WHERE JW.COMPANY = @COMPANY AND  CONVERT(DATETIME,@PROCESS_DATE,103) BETWEEN JC.START_DATE AND JC.END_DATE )
    , D AS (SELECT COMPANY, DISTRIBUTOR, DSR FROM DSR WHERE COMPANY = @COMPANY AND DISTRIBUTOR = @DISTRIBUTOR AND JOB_TYPE IN ('01','03') AND FCS = 1)
    , j as (select company, YEAR, jcno, START_DATE, END_DATE from J_Cycle where COMPANY = @COMPANY and @PROCESS_DATE between START_DATE and END_DATE)
    , jr as (select j.COMPANY,j.YEAR,j.jcno,j.START_DATE, j.end_date, j.START_DATE MW_DATE from j
                  union all
                  select j.COMPANY,j.YEAR,j.jcno,j.START_DATE, j.end_date, jr.MW_DATE+1  
                  from j inner join jr on j.COMPANY = jr.COMPANY and j.YEAR = jr.YEAR and j.JCNO =jr.JCNO and jr.MW_DATE <= j.END_DATE
                  )
      , jrw as (select jr.*, datepart(dw,jr.MW_DATE) dow, j.WEEK_NO from jr inner join JC_WEEK j on j.COMPANY = jr.company and j.JCNO = jr.jcno and jr.mw_Date between j.START_DATE and j.END_DATE)
      ,PD AS (
            SELECT COMPANY,DISTRIBUTOR, PJP , DSR, SELL_CATEGORY, SECTION, RIGHT('00'+CAST(WEEK_NO AS VARCHAR),2) WEEK_NO, WDN, WDV 
            FROM (
            SELECT PD.COMPANY, PH.DISTRIBUTOR, PD.PJP, d.DSR, PD.SELL_CATEGORY, PD.SECTION, PD.WEEK_NO
            , PD.MON [1], PD.TUE [2], PD.WED [3], PD.THU [4], PD.FRI [5], PD.SAT [6], PD.SUN [7]
            FROM PJP_HEAD PH 
            INNER JOIN PJP_DETAIL PD ON PH.COMPANY = PD.COMPANY AND PH.DISTRIBUTOR = PD.DISTRIBUTOR AND PH.PJP = PD.PJP and ph.ACTIVE = 1 and ph.DeadAlive = 1
            inner join d on d.COMPANY = ph.COMPANY and d.DISTRIBUTOR = ph.DISTRIBUTOR and d.DSR = ph.DSR
            inner join JW on jw.COMPANY = pd.COMPANY and jw.WEEK_NO = RIGHT('00'+CAST(pd.WEEK_NO AS VARCHAR),2)
            ) P UNPIVOT (
            WDV FOR WDN IN ([1],[2],[3],[4],[5],[6],[7])
            ) UP)
      , PDF AS (SELECT pd.*, jrw.YEAR, jrw.JCNO, jrw.MW_DATE FROM pd inner join jrw on jrw.COMPANY = pd.COMPANY and jrw.WEEK_NO = pd.WEEK_NO and jrw.dow = pd.WDN and pd.WDV = 1  )

      , jsPOP AS (
            SELECT PD.COMPANY, PD.DISTRIBUTOR, PD.DSR, PD.PJP, pd.SELL_CATEGORY, pd.SECTION
            , pd.YEAR, pd.JCNO, PD.WEEK_NO, pd.MW_DATE DELV_DATE
            , SP.TOWN, SP.LOCALITY, SP.SLOCALITY , SP.POP, p.SUB_ELEMENT
            , pd.MW_DATE DOC_DATE, pd.MW_DATE STATUS_DATE
            FROM PDF pd INNER JOIN SECTION_POP_PERMANENT SP 
            ON SP.COMPANY = PD.COMPANY AND SP.DISTRIBUTOR = PD.DISTRIBUTOR AND SP.PJP = PD.PJP AND SP.SELL_CATEGORY = PD.SELL_CATEGORY AND SP.SECTION = PD.SECTION
            inner join pop p on p.COMPANY = sp.COMPANY and p.DISTRIBUTOR = sp.DISTRIBUTOR and p.TOWN = sp.TOWN and p.LOCALITY = sp.LOCALITY and p.SLOCALITY = sp.SLOCALITY and p.POP = sp.POP
            GROUP BY PD.COMPANY, PD.DISTRIBUTOR, PD.DSR, PD.PJP, pd.SELL_CATEGORY, pd.SECTION
            , pd.YEAR, pd.JCNO, PD.WEEK_NO, pd.MW_DATE
            , SP.TOWN, SP.LOCALITY, SP.SLOCALITY , SP.POP, p.SUB_ELEMENT
      )

    , PS AS (SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP, PS.STATUS_DATE, PS.SELL_CATEGORY, PS.SECTION
            , PS.DSR, ps.YEAR, ps.JCNO, ps.WEEK_NO, PS.SUB_ELEMENT
            , ROW_NUMBER() OVER(PARTITION BY PS.COMPANY, PS.DISTRIBUTOR, PS.PJP,Ps.YEAR, Ps.JCNO, Ps.WEEK_NO ORDER BY  PS.STATUS_DATE) SP_WK
            , CASE ROW_NUMBER() OVER(PARTITION BY PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP, Ps.JCNO ORDER BY  PS.STATUS_DATE) 
              WHEN 1 THEN 1 ELSE NULL END USP_JC
            FROM jsPOP PS )

    , PR_CM AS (SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, CM.PJP, CM.SELL_CATEGORY, CM.SECTION, Jrw.YEAR, Jrw.JCNO, Jrw.WEEK_NO, MAX(CM.DELV_DATE) DELV_DATE
                  , CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, P.SUB_ELEMENT
                  , CM.DOC_DATE DOC_DATE
                  FROM CASHMEMO CM
                  INNER JOIN jrw ON CM.COMPANY = Jrw.COMPANY AND CM.DOC_DATE = jrw.MW_DATE
                  AND CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = 'CM' AND CM.SUB_DOCUMENT IN ('01') AND CM.VISIT_TYPE <> '88' and cm.NET_AMOUNT > 0
                  INNER JOIN D ON D.COMPANY = CM.COMPANY AND D.DISTRIBUTOR = CM.DISTRIBUTOR AND D.DSR = CM.DSR
                  INNER JOIN POP P ON P.COMPANY = CM.COMPANY AND P.DISTRIBUTOR = CM.DISTRIBUTOR 
                  AND P.TOWN = CM.TOWN AND P.LOCALITY = CM.LOCALITY AND P.SLOCALITY = CM.SLOCALITY AND P.POP = CM.POP
                  and not exists (select 1 from CASHMEMO c where c.COMPANY = cm.COMPANY and c.DISTRIBUTOR = cm.DISTRIBUTOR and c.REF_DOCUMENT = cm.DOCUMENT and c.REF_SUB_DOCUMENT = cm.SUB_DOCUMENT and c.REF_DOC_NO = cm.DOC_NO and c.CASHMEMO_TYPE = '19'   and c.SUB_DOCUMENT <> '01' and c.VISIT_TYPE <> '88')
                  GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, CM.PJP, CM.SELL_CATEGORY, CM.SECTION, JrW.YEAR, JrW.JCNO, JrW.WEEK_NO, CM.DOC_DATE
                  , CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, P.SUB_ELEMENT
                  )
    , TR_FCS AS (SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.YEAR,PS.JCNO,PS.WEEK_NO
                  FROM PS 
                  GROUP BY PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.YEAR,PS.JCNO,PS.WEEK_NO)
    , PSC AS (SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.YEAR,PS.JCNO, PS.WEEK_NO
            , MAX(PS.SP_WK) S_WK, COUNT(PS.USP_JC) US_JC
            FROM PS 
            GROUP BY  PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.YEAR,PS.JCNO, PS.WEEK_NO)
    , PP AS (SELECT PP.COMPANY, PP.DISTRIBUTOR, PP.PJP, PP.TOWN, PP.LOCALITY, PP.SLOCALITY, PP.POP, PP.DOC_DATE, PP.SELL_CATEGORY, PP.SECTION
            , PP.DSR, PP.YEAR, PP.JCNO, PP.WEEK_NO, PP.SUB_ELEMENT
            , ROW_NUMBER() OVER(PARTITION BY PP.COMPANY, PP.DISTRIBUTOR, PP.PJP,PP.YEAR, PP.JCNO, PP.WEEK_NO ORDER BY  PP.DOC_DATE) PP_WK
            , CASE ROW_NUMBER() OVER(PARTITION BY PP.COMPANY, PP.DISTRIBUTOR, PP.DSR, PP.TOWN, PP.LOCALITY, PP.SLOCALITY, PP.POP, PP.JCNO ORDER BY  PP.DOC_DATE) WHEN 1 THEN 1 ELSE NULL END UPP_JC
            FROM PR_CM PP where exists (Select 1 from jsPOP where pp.COMPANY = COMPANY and pp.DISTRIBUTOR = DISTRIBUTOR and pp.PJP = PJP and pp.SELL_CATEGORY = SELL_CATEGORY and pp.TOWN = TOWN and pp.LOCALITY = LOCALITY and pp.SLOCALITY = SLOCALITY and pp.POP = POP and pp.DOC_DATE = DOC_DATE ))
    , PPC AS (SELECT PP.COMPANY, PP.DISTRIBUTOR, PP.PJP, PP.YEAR,PP.JCNO, PP.WEEK_NO
            , MAX(PP.PP_WK) P_WK, COUNT(PP.UPP_JC) UP_JC
            FROM PP 
            GROUP BY  PP.COMPANY, PP.DISTRIBUTOR, PP.PJP, PP.YEAR,PP.JCNO, PP.WEEK_NO)
    , PR_CDL AS (SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, P.SUB_ELEMENT, JrW.YEAR, JrW.JCNO, JrW.WEEK_NO, MAX(CM.DELV_DATE) DELV_DATE, CM.PJP, CM.SELL_CATEGORY, CM.SECTION
                  , CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CD.SKU
                  , SUM(CD.AMOUNT) AMT, SUM(CD.QTY1 * B.SELL_FACTOR1 + CD.QTY2 * B.SELL_FACTOR2 + CD.QTY3 * B.SELL_FACTOR3) QTY
                  , SUM(CD.QTY1 * B.SELL_WEIGHT1 + CD.QTY2 * B.SELL_WEIGHT2 + CD.QTY3 * B.SELL_WEIGHT3) VOL
                  , CM.DOC_DATE DOC_DATE
                  FROM CASHMEMO CM
                  INNER JOIN CASHMEMO_DETAIL CD ON CM.COMPANY = CD.COMPANY AND CM.DISTRIBUTOR = CD.DISTRIBUTOR 
                  AND CM.DOCUMENT = CD.DOCUMENT AND CM.SUB_DOCUMENT = CD.SUB_DOCUMENT AND CM.DOC_NO = CD.DOC_NO
                  INNER JOIN BATCH B ON CD.COMPANY = B.COMPANY AND CD.SKU = B.SKU AND B.BATCH = CD.BATCH
                  INNER JOIN jrw ON CM.COMPANY = Jrw.COMPANY AND CM.DOC_DATE = jrw.MW_DATE
                  AND CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = 'CM' AND CM.SUB_DOCUMENT IN ('01') AND CM.VISIT_TYPE <> '88' and cm.NET_AMOUNT > 0 and cd.amount>0
                  INNER JOIN D ON D.COMPANY = CM.COMPANY AND D.DISTRIBUTOR = CM.DISTRIBUTOR AND D.DSR = CM.DSR
                  INNER JOIN POP P ON P.COMPANY = CM.COMPANY AND P.DISTRIBUTOR = CM.DISTRIBUTOR 
                  AND P.TOWN = CM.TOWN AND P.LOCALITY = CM.LOCALITY AND P.SLOCALITY = CM.SLOCALITY AND P.POP = CM.POP
                  and not exists (select 1 from CASHMEMO c where c.COMPANY = cm.COMPANY and c.DISTRIBUTOR = cm.DISTRIBUTOR and c.REF_DOCUMENT = cm.DOCUMENT and c.REF_SUB_DOCUMENT = cm.SUB_DOCUMENT and c.REF_DOC_NO = cm.DOC_NO and c.CASHMEMO_TYPE = '19'  and c.SUB_DOCUMENT <> '01')
                  GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, P.SUB_ELEMENT, JrW.YEAR, JrW.JCNO, JrW.WEEK_NO, CM.DOC_DATE, CM.PJP, CM.SELL_CATEGORY, CM.SECTION
                  , CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CD.SKU
                  )
    , LPPC AS (SELECT A.COMPANY, A.DISTRIBUTOR, A.PJP, A.YEAR , A.JCNO, A.WEEK_NO
                  , COUNT(1) LPPC_WK
                  FROM PR_CDL A
                  GROUP BY A.COMPANY, A.DISTRIBUTOR, A.PJP, A.YEAR , A.JCNO, A.WEEK_NO)
    , FCS AS (SELECT COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO,WEEK_NO
            , S_WK            , US_JC           , 0 P_WK          ,0 UP_JC          , 0 LPPC_WK
            FROM PSC
            UNION ALL
            SELECT COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO,WEEK_NO
            , 0 S_WK          , 0 US_JC         , P_WK            ,UP_JC            , 0 LPPC_WK
            FROM PPC
            UNION ALL
            SELECT COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO,WEEK_NO
            , 0 S_WK          , 0 US_JC         , 0 P_WK          , 0 UP_JC         , LPPC_WK
            FROM LPPC
            UNION ALL
            SELECT COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO,WEEK_NO
            , 0 S_WK          , 0 US_JC         , 0 P_WK          , 0 UP_JC         , 0 LPPC_WK
            FROM TR_FCS)
    INSERT INTO @FCS_DATA (COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO ,WEEK_NO
    ,SCH_WK , UQ_SCH_WK_JC, PRD_WK, UQ_PRD_WK_JC, LPPC_WK 
    )
    SELECT COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO,WEEK_NO
    , SUM(S_WK) S_WK, SUM(US_JC) US_JC, SUM(P_WK) P_WK, SUM(UP_JC) UP_JC, SUM(LPPC_WK) LPPC_WK
    FROM FCS
    GROUP BY COMPANY,DISTRIBUTOR,PJP,YEAR,JCNO,WEEK_NO
       RETURN;
END

GO


CREATE FUNCTION [dbo].[SPLITVARMAX]
(@STRING VARCHAR(MAX),
@DELIMITER VARCHAR(5))

RETURNS @TBLSPLITVALUES TABLE (DATA VARCHAR(max))

AS
BEGIN

DECLARE @AUXSTRING VARCHAR(MAX)
SET @AUXSTRING = REPLACE(@STRING, @DELIMITER,'.');

WITH SPLIT(STPOS,ENDPOS)
AS(
SELECT 0 AS STPOS, CHARINDEX('.',@AUXSTRING) AS ENDPOS
UNION ALL
SELECT CAST(ENDPOS AS INT)+1, CHARINDEX('.',@AUXSTRING,ENDPOS+1)
FROM SPLIT
WHERE ENDPOS > 0
)

INSERT @TBLSPLITVALUES
SELECT SUBSTRING(@AUXSTRING,STPOS,COALESCE(NULLIF(ENDPOS,0),LEN(@AUXSTRING)+1)-STPOS)
FROM SPLIT
OPTION(MAXRECURSION 0);
RETURN
END

GO


CREATE  FUNCTION [dbo].[MultiValueParamsSplit](@String varchar(8000), @Delimiter char(1))       
    returns @temptable TABLE (items varchar(8000))       
    as       
    begin       
        declare @idx int       
        declare @slice varchar(8000)       
          
        select @idx = 1       
            if len(@String)<1 or @String is null  return       
          
        while @idx!= 0       
        begin       
            set @idx = charindex(@Delimiter,@String)       
            if @idx!=0       
                set @slice = left(@String,@idx - 1)       
            else       
                set @slice = @String       
              
            if(len(@slice)>0)  
                insert into @temptable(Items) values(@slice)       
      
            set @String = right(@String,len(@String) - @idx)       
            if len(@String) = 0 break       
        end   
    return       
    end  
GO



CREATE FUNCTION [dbo].[fn_Dates]
(     
      -- Add the parameters for the function here
      @StartYear Varchar(4),
      @EndYear Varchar(4)
)
RETURNS @TempDateTable TABLE
(
      [DateID] Int Not Null,
      [FullDate] datetime NOT NULL,
      [CalendarYear] int NOT NULL, 
      [CalendarMonth] int NOT NULL,
      [CalendarMonthName] varchar(20) NOT NULL,
      [CalendarDay] int NOT NULL,
      [CalendarDayName] varchar(20) NOT NULL,
      [CalendarQuarter] int NOT NULL,
      [CalendarQuarterName] varchar(20) NOT NULL,
      [JCYear] int NULL,
      [JCQuarter] int NULL,
      [JCMonth] int NULL,
      [JCWeek] int NULL,
      [Week] int not null,
      [WeekName] varchar(20) not null
)
AS
BEGIN

DECLARE @StartDate Datetime, @EndDate Datetime
Select @StartDate = Cast(@StartYear + '-01-01' AS DateTime), @EndDate = Cast(@EndYear + '-12-31' AS DATETIME)

DECLARE @LoopDate datetime
SET @LoopDate = @StartDate

WHILE @LoopDate <= @EndDate
BEGIN
 -- add a record into the date dimension table for this date
 INSERT INTO @TempDateTable VALUES (
      CONVERT(CHAR(10), @LoopDate, 112),
      @LoopDate,
      Year(@LoopDate),
      Month(@LoopDate), 
      DATENAME(Month, @LoopDate), 
      Day(@LoopDate), 
      DATENAME(dw, @LoopDate), 
      CASE WHEN Month(@LoopDate) IN (1, 2, 3) THEN 1
      WHEN Month(@LoopDate) IN (4, 5, 6) THEN 2
      WHEN Month(@LoopDate) IN (7, 8, 9) THEN 3
      WHEN Month(@LoopDate) IN (10, 11, 12) THEN 4
      END,
      CASE WHEN Month(@LoopDate) IN (1, 2, 3) THEN 'Q1'
      WHEN Month(@LoopDate) IN (4, 5, 6) THEN 'Q2'
      WHEN Month(@LoopDate) IN (7, 8, 9) THEN 'Q3'
      WHEN Month(@LoopDate) IN (10, 11, 12) THEN 'Q4'
      END,
      (Select J.Year From J_Cycle J Where @LoopDate Between J.Start_Date And J.EnD_Date),
      Case 
      When (Select J.JCNO From J_Cycle J Where @LoopDate Between J.Start_Date And J.EnD_Date) IN (1,2,3) Then 1
      When (Select J.JCNO From J_Cycle J Where @LoopDate Between J.Start_Date And J.EnD_Date) IN (4,5,6) Then 2
      When (Select J.JCNO From J_Cycle J Where @LoopDate Between J.Start_Date And J.EnD_Date) IN (7,8,9) Then 3
      When (Select J.JCNO From J_Cycle J Where @LoopDate Between J.Start_Date And J.EnD_Date) IN (10,11,12) Then 4
      End,
      (Select J.JCNO From J_Cycle J Where @LoopDate Between J.Start_Date And J.EnD_Date),
      (Select J.Week_No From JC_Week J Where @LoopDate Between J.Start_Date And J.EnD_Date),
      DATEPART(DAY, @LoopDate - 1) / 7 + 1,
      'W' + Convert(Varchar, DATEPART(DAY, @LoopDate - 1) / 7 + 1)
   
 )  
 
 -- increment the LoopDate by 1 day before
 -- we start the loop again
 SET @LoopDate = DateAdd(d, 1, @LoopDate)
END

RETURN
END
GO




