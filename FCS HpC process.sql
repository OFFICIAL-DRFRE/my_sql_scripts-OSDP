
SET DATEFIRST 1;
DECLARE @YEAR VARCHAR(MAX), @JCNO VARCHAR(MAX), @JCSDATE DATETIME, @JCEDATE DATETIME, @YEARJC VARCHAR(MAX),@COMPANY VARCHAR(MAX), @DISTRIBUTOR VARCHAR(MAX), @PROCESS_DATE DATETIME,@FIELD_GROUP VARCHAR(MAX)='206'
,@VT VARCHAR(2)= '02', @CMDOC VARCHAR(2) = 'CM', @SDOCSALES VARCHAR(2) = '01', @CMTYPEFSR VARCHAR(2) = '19', @JTOB VARCHAR(2)='01', @JTSS VARCHAR(2)='03',@SUBELEMENT varchar(max);;


/*SELECT @COMPANY = '$COMPANY$' , @DISTRIBUTOR = '$DISTRIBUTOR$' , @PROCESS_DATE = CONVERT(DATETIME,'$PROCESS_DATE$',103);*/
SELECT @COMPANY = '23' , @DISTRIBUTOR = '15550650' , @PROCESS_DATE = CONVERT(DATETIME,'20220412',103);
SELECT @YEAR = JC.YEAR, @JCNO = JC.JCNO , @JCSDATE = JC.START_DATE, @JCEDATE = JC.END_DATE ,@YEARJC =  RIGHT(YEAR,2)+JCNO
FROM J_CYCLE JC WHERE JC.COMPANY = @COMPANY AND  CONVERT(DATETIME,@PROCESS_DATE,103) BETWEEN JC.START_DATE AND JC.END_DATE;


SELECT @SUBELEMENT = PARAMETER_VALUE FROM APPLICATION_SETUP WHERE PARAMETER_ID='TO_SUB_ELEMENT'

IF OBJECT_ID('TEMPDB..#TEMP_POLICY_TS') IS NOT NULL DROP TABLE #TEMP_POLICY_TS;
IF OBJECT_ID('TEMPDB..#FINALDATA_PJP') IS NOT NULL DROP TABLE #FINALDATA_PJP;
IF OBJECT_ID('TEMPDB..#kpi') IS NOT NULL DROP TABLE #kpi;

IF OBJECT_ID('TEMPDB..#PJP_PROD') IS NOT NULL DROP TABLE #PJP_PROD;
IF OBJECT_ID('TEMPDB..#lppc') IS NOT NULL DROP TABLE #lppc;
IF OBJECT_ID('TEMPDB..#mepas') IS NOT NULL DROP TABLE #mepas;
IF OBJECT_ID('TEMPDB..#petc') IS NOT NULL DROP TABLE #petc;
IF OBJECT_ID('TEMPDB..#CM_TEMP') IS NOT NULL DROP TABLE #CM_TEMP;



WITH 
MASTER_POLICY as(
select * from POLICY where FIELD_GROUP=@FIELD_GROUP and STATUS=1 and REF_POLICY_ID is null
) 

,POL AS 
       (SELECT P.COMPANY, P.POLICY_ID, PD.VALUE_COMB_FROM KPI_ID 
       FROM POLICY P INNER JOIN POLICY_DETAIL PD 
       ON P.COMPANY = PD.COMPANY AND P.POLICY_ID = PD.POLICY_ID 
       inner join MASTER_POLICY b on p.COMPANY=b.company and b.POLICY_ID=p.REF_POLICY_ID
       WHERE P.FIELD_GROUP = @FIELD_GROUP AND P.STATUS = 1 AND PD.FIELD_COMB = 'KPI_ID')       
, POL_DST AS 
       (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM DISTRIBUTOR 
       FROM POL A INNER JOIN POLICY_DETAIL PD 
       ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'DISTRIBUTOR')
       
, POL_QDST AS 
       (SELECT A.COMPANY, A.POLICY_ID, B.DISTRIBUTOR 
       FROM POL_DST A INNER JOIN DISTRIBUTOR B 
       ON A.COMPANY = B.COMPANY AND ISNULL(A.DISTRIBUTOR,B.DISTRIBUTOR) = B.DISTRIBUTOR)
, POL_PJP AS 
       (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM PJP
       FROM POL A INNER JOIN POLICY_DETAIL PD 
       ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'PJP')
, POL_QPJP AS 
       (SELECT A.COMPANY, A.POLICY_ID, B.PJP 
       FROM POL_PJP A INNER JOIN PJP_HEAD B 
       ON A.COMPANY = B.COMPANY AND ISNULL(A.PJP,B.PJP) = B.PJP)
, POL_JC AS 
       (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM [YEAR~JCNO] 
       FROM POL A INNER JOIN POLICY_DETAIL PD 
       ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'YEAR~JCNO')
, POL_QJC AS 
       (SELECT A.COMPANY, A.POLICY_ID, B.YEAR+'~'+B.JCNO [YEAR~JCNO] 
       FROM POL_JC A INNER JOIN J_CYCLE B 
       ON A.COMPANY = B.COMPANY AND ISNULL(A.[YEAR~JCNO],B.YEAR+'~'+B.JCNO) = B.YEAR+'~'+B.JCNO)
       
, POL_FC AS 
       (
       SELECT P.COMPANY, A.DISTRIBUTOR,B.PJP , P.KPI_ID
       , MAX(PS.RANGE_FROM) RANGE_FROM
       FROM POL P 
       INNER  JOIN POL_QDST A 
       ON P.COMPANY = A.COMPANY AND P.POLICY_ID = A.POLICY_ID 
       INNER  JOIN POL_QPJP B 
       ON P.COMPANY = B.COMPANY AND P.POLICY_ID = B.POLICY_ID 
       INNER  JOIN POL_QJC C 
       ON P.COMPANY = C.COMPANY AND P.POLICY_ID = C.POLICY_ID 
       INNER  JOIN POLICY_SLAB PS 
       ON P.COMPANY = PS.COMPANY AND P.POLICY_ID = PS.POLICY_ID 
       WHERE P.COMPANY = @COMPANY AND A.DISTRIBUTOR = @DISTRIBUTOR 
       AND C.[YEAR~JCNO] = @YEAR + '~' + @JCNO
       AND P.KPI_ID IN ('FCS6ECR4', 'FCS6BPR4','FCS6LPR3')
       GROUP BY P.COMPANY, A.DISTRIBUTOR,B.PJP , P.KPI_ID
       )
SELECT COMPANY  , DISTRIBUTOR, PJP, [FCS6ECR4] TGT_PER_ECO, [FCS6BPR4] TGT_PER_BP,[FCS6LPR3] TGT_PER_LPPC
INTO #TEMP_POLICY_TS
FROM POL_FC U PIVOT (MAX(RANGE_FROM) FOR KPI_ID IN ([FCS6ECR4], [FCS6BPR4],[FCS6LPR3]))P;


WITH 
mepas as (
              select * from (
              select company,distributor,TOWN, LOCALITY, SLOCALITY, POP,active,row_number() over(partition by company,distributor,TOWN, LOCALITY, SLOCALITY, POP order by week_no desc,ACTIVE DESC)rn
              from
              (
                     select a.COMPANY, a.DISTRIBUTOR,a.TOWN, a.LOCALITY, a.SLOCALITY, a.POP,a.year,a.jcno,a.week_no,a.active from rft_pop a
                     where a.company=@company and a.distributor=@distributor and a.year=@year and a.jcno=@jcno
                     union all
                     select COMPANY, DISTRIBUTOR,TOWN, LOCALITY, SLOCALITY, POP,@year,@jcno,0 week_no,active from pop where company=@company and distributor=@distributor 
              )dt ) a where rn = 1
       )
select *into #mepas from mepas;
with
SCH AS 
(
              SELECT COMPANY,DISTRIBUTOR,PJP,SELL_CATEGORY,SECTION, WEEK_NO,DAYNO
              FROM (
              SELECT PD.COMPANY, PD.DISTRIBUTOR, PD.PJP, PD.SELL_CATEGORY, PD.SECTION, PD.WEEK_NO
              , CASE WHEN PD.MON = 1 THEN 1 ELSE NULL END [1]
              , CASE WHEN PD.TUE = 1 THEN 1 ELSE NULL END [2]
              , CASE WHEN PD.WED = 1 THEN 1 ELSE NULL END [3]
              , CASE WHEN PD.THU = 1 THEN 1 ELSE NULL END [4]
              , CASE WHEN PD.FRI = 1 THEN 1 ELSE NULL END [5]
              , CASE WHEN PD.SAT = 1 THEN 1 ELSE NULL END [6]
              , CASE WHEN PD.SUN = 1 THEN 1 ELSE NULL END [7]
              FROM PJP_HEAD PH
              INNER JOIN DSR D ON D.COMPANY = PH.COMPANY AND D.DISTRIBUTOR = PH.DISTRIBUTOR AND D.DSR = PH.DSR AND D.JOB_TYPE IN (@JTOB,@JTSS)
              AND ISNULL(PH.CLOSING_DATE,PH.WORKING_DATE) <= @JCEDATE 
              AND D.DISTRIBUTOR=@DISTRIBUTOR
              INNER JOIN PJP_DETAIL PD ON PH.COMPANY = PD.COMPANY AND PH.DISTRIBUTOR = PD.DISTRIBUTOR AND PH.PJP = PD.PJP
              AND PD.DISTRIBUTOR=@DISTRIBUTOR
              INNER JOIN JC_WEEK JW ON JW.COMPANY = PD.COMPANY AND CAST(JW.WEEK_NO  AS INTEGER) = PD.WEEK_NO AND JW.YEAR = @YEAR AND JW.JCNO = @JCNO              
              ) P UNPIVOT
              (
              A FOR DAYNO IN ([1],[2],[3],[4],[5],[6],[7])
              ) U
)

, A AS 
(
       SELECT A FROM (VALUES (1),(1),(1)) A(A)
)
, B AS 
(
       SELECT ROW_NUMBER()OVER(ORDER BY A.A)-1 A FROM A CROSS JOIN A B CROSS JOIN A C CROSS JOIN A D 
)

, P AS 
(
       SELECT PH.COMPANY, PH.DISTRIBUTOR, PH.PJP
       , CASE WHEN ISNULL(PH.CLOSING_DATE,PH.WORKING_DATE) BETWEEN @JCSDATE AND @JCEDATE THEN ISNULL(PH.CLOSING_DATE,PH.WORKING_DATE) ELSE @JCSDATE END SDATE 
       , @JCEDATE EDATE
       FROM PJP_HEAD PH
       INNER JOIN DSR D ON D.COMPANY = PH.COMPANY AND D.DISTRIBUTOR = PH.DISTRIBUTOR AND D.DSR = PH.DSR AND D.JOB_TYPE IN (@JTOB,@JTSS)
       AND PH.DISTRIBUTOR=@DISTRIBUTOR
       AND ISNULL(PH.CLOSING_DATE,PH.WORKING_DATE) <= @JCEDATE       
)
, PJPDAYS AS 
(
       SELECT P.*, SDATE+ B.A WDATE FROM P INNER JOIN B ON P.SDATE+B.A <= P.EDATE
)

, PJPWDAYS AS 
(
       SELECT PW.*, DATEPART(DW,PW.WDATE) WDAY
       , JW.WEEK_NO
       FROM PJPDAYS PW
       INNER JOIN JC_WEEK JW ON JW.COMPANY = PW.COMPANY AND PW.WDATE BETWEEN JW.START_DATE AND JW.END_DATE
)

, XSPP AS 
(
       SELECT SPP.COMPANY, SPP.DISTRIBUTOR, SPP.PJP, P.WDATE, SPP.TOWN, SPP.LOCALITY, SPP.SLOCALITY, SPP.POP 
       FROM PJPWDAYS P
       INNER JOIN SCH S ON P.COMPANY = S.COMPANY AND P.DISTRIBUTOR = S.DISTRIBUTOR AND P.PJP = S.PJP AND P.WEEK_NO = S.WEEK_NO AND P.WDAY = S.DAYNO
       INNER JOIN SECTION_POP_PERMANENT SPP ON SPP.COMPANY=S.COMPANY AND SPP.DISTRIBUTOR=S.DISTRIBUTOR AND SPP.PJP=S.PJP AND SPP.SELL_CATEGORY=S.SELL_CATEGORY AND  SPP.SECTION=S.SECTION AND SPP.DISTRIBUTOR=@DISTRIBUTOR
       UNION ALL
       SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.STATUS_DATE , PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP
       FROM PJP_HEAD PH
       INNER HASH JOIN DSR D ON D.COMPANY = PH.COMPANY AND D.DISTRIBUTOR = PH.DISTRIBUTOR AND PH.DISTRIBUTOR=@DISTRIBUTOR AND D.DSR = PH.DSR AND D.JOB_TYPE IN (@JTOB,@JTSS) 
       INNER LOOP JOIN POP_STATUS PS ON PH.COMPANY = PS.COMPANY AND PH.DISTRIBUTOR = PS.DISTRIBUTOR AND PS.DISTRIBUTOR=@DISTRIBUTOR AND PH.PJP = PS.PJP       
       AND PS.STATUS_DATE BETWEEN @JCSDATE AND @JCEDATE AND PS.STATUS_DATE < ISNULL(PH.CLOSING_DATE,PH.WORKING_DATE)
       
       
)
, SPP AS 
(
       SELECT COMPANY, DISTRIBUTOR, PJP, TOWN, LOCALITY, SLOCALITY, POP 
       , COUNT(DISTINCT P.WDATE) WDATE_COUNT
       FROM XSPP P
       GROUP BY COMPANY, DISTRIBUTOR, PJP, TOWN, LOCALITY, SLOCALITY, POP 
)



, PETC AS 
(
       SELECT SPP.COMPANY, SPP.DISTRIBUTOR, SPP.PJP,SPP.TOWN, SPP.LOCALITY, SPP.SLOCALITY, SPP.POP
       , SPP.WDATE_COUNT WDATE_COUNT
       , CASE WHEN P.ACTIVE = 1 THEN 1 ELSE NULL END ACTIVE_STATUS
       FROM 
       #mepas P
       INNER JOIN SPP ON SPP.COMPANY = P.COMPANY AND SPP.DISTRIBUTOR = P.DISTRIBUTOR AND SPP.TOWN = P.TOWN AND SPP.LOCALITY = P.LOCALITY AND SPP.SLOCALITY = P.SLOCALITY AND SPP.POP = P.POP
)

select * into #petc from PETC;


SELECT cm.*,p.active INTO #CM_TEMP FROM CASHMEMO CM 
INNER JOIN #MEPAS P ON P.COMPANY = CM.COMPANY AND P.DISTRIBUTOR = CM.DISTRIBUTOR AND P.TOWN = CM.TOWN AND P.LOCALITY = CM.LOCALITY AND P.SLOCALITY = CM.SLOCALITY AND P.POP = CM.POP
WHERE CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = @CMDOC 
AND CM.DELV_DATE BETWEEN @JCSDATE AND @JCEDATE AND CM.VISIT_TYPE<>'88'
AND NOT EXISTS (SELECT 1 FROM CASHMEMO C WHERE C.COMPANY = CM.COMPANY AND C.DISTRIBUTOR = CM.DISTRIBUTOR AND C.REF_DOCUMENT = CM.DOCUMENT AND C.REF_SUB_DOCUMENT = CM.SUB_DOCUMENT AND C.REF_DOC_NO = CM.DOC_NO AND C.CASHMEMO_TYPE =@CMTYPEFSR  AND C.SUB_DOCUMENT <> @SDOCSALES AND C.VISIT_TYPE =@VT);


CREATE NONCLUSTERED INDEX IDX_#CM_TEMP_CENTRAL
ON [dbo].[#CM_TEMP] ([DOCUMENT],[SUB_DOCUMENT],[VISIT_TYPE],[COMPANY],[DISTRIBUTOR])
INCLUDE ([DOC_DATE],[PJP],[TOWN],[LOCALITY],[SLOCALITY],[POP],[NET_AMOUNT]);

with

POP_PROD AS 
(
    SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.PJP, CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CM.DOC_DATE , cm.active
    FROM #CM_TEMP CM           
    WHERE CM.COMPANY = @COMPANY AND CM.DISTRIBUTOR = @DISTRIBUTOR AND CM.DOCUMENT = @CMDOC AND CM.SUB_DOCUMENT IN (@SDOCSALES) 
    AND CM.VISIT_TYPE = @vt    
    GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.PJP, CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CM.DOC_DATE , cm.active
    HAVING SUM(CM.NET_AMOUNT)>0
)

, PJP_PROD AS (
SELECT COMPANY, DISTRIBUTOR, PJP,COUNT(1) BP, COUNT(DISTINCT case when active = 1 then TOWN + LOCALITY+SLOCALITY+POP else null end) ECO
FROM POP_PROD
GROUP BY COMPANY, DISTRIBUTOR, PJP
)
select *into #PJP_PROD from PJP_PROD;

with PR_CDL AS
(
       SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, P.SUB_ELEMENT
                          , MAX(CM.DELV_DATE) DELV_DATE, CM.PJP, CM.SELL_CATEGORY, CM.SECTION
                  , CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CD.SKU
                  , SUM(CD.AMOUNT) AMT, SUM(CD.QTY1 * B.SELL_FACTOR1 + CD.QTY2 * B.SELL_FACTOR2 + CD.QTY3 * B.SELL_FACTOR3) QTY
                  , SUM(CD.QTY1 * B.SELL_WEIGHT1 + CD.QTY2 * B.SELL_WEIGHT2 + CD.QTY3 * B.SELL_WEIGHT3) VOL
                  , CM.DOC_DATE DOC_DATE
                  FROM #CM_TEMP CM
                  INNER JOIN CASHMEMO_DETAIL CD ON CM.COMPANY = CD.COMPANY AND CM.DISTRIBUTOR = CD.DISTRIBUTOR AND CM.DOCUMENT = CD.DOCUMENT AND CM.SUB_DOCUMENT = CD.SUB_DOCUMENT AND CM.DOC_NO = CD.DOC_NO
                  INNER JOIN BATCH B ON CD.COMPANY = B.COMPANY AND CD.SKU = B.SKU AND B.BATCH = CD.BATCH                  
                  INNER JOIN POP P ON P.COMPANY = CM.COMPANY AND P.DISTRIBUTOR = CM.DISTRIBUTOR 
                  AND P.TOWN = CM.TOWN AND P.LOCALITY = CM.LOCALITY AND P.SLOCALITY = CM.SLOCALITY AND P.POP = CM.POP
                  /*and cm.NET_AMOUNT > 0 and cd.amount>0*/                                    
                  GROUP BY CM.COMPANY, CM.DISTRIBUTOR, CM.DSR, P.SUB_ELEMENT, CM.DOC_DATE, CM.PJP, CM.SELL_CATEGORY, CM.SECTION
                  , CM.TOWN , CM.LOCALITY, CM.SLOCALITY, CM.POP, CD.SKU
                  HAVING SUM(CD.AMOUNT)>0
)
    , LPPC AS (SELECT A.COMPANY, A.DISTRIBUTOR, A.PJP
                  , COUNT(1) LPPC_WK
                  FROM PR_CDL A
                  GROUP BY A.COMPANY, A.DISTRIBUTOR, A.PJP)


select *into #LPPC from LPPC;
with
FOURTEENKPI AS 
(
       SELECT P.COMPANY,P.DISTRIBUTOR, P.PJP
       
       , COUNT(P.ACTIVE_STATUS) FCS6ECR1
       , MAX(ISNULL(PP.ECO,0)) FCS6ECR2
       , MAX(PT.TGT_PER_ECO) FCS6ECR4
       
       , SUM(P.WDATE_COUNT ) FCS6BPR1
       , MAX(ISNULL(PP.BP,0)) FCS6BPR2
       , MAX(PT.TGT_PER_BP) FCS6BPR4  

       
       , MAX(LPPC_WK)       FCS6LPR1
       , MAX(LPPC_WK)/MAX(ISNULL(PP.BP,0))      FCS6LPR2
       , MAX(PT.TGT_PER_LPPC) FCS6LPR3
       
       ,CAST( COUNT(1)OVER(PARTITION BY p.COMPANY,p.DISTRIBUTOR ) AS NUMERIC) FCS6RR4    
              
       FROM #PETC P
       INNER JOIN #TEMP_POLICY_TS PT ON P.COMPANY = PT.COMPANY AND P.DISTRIBUTOR = PT.DISTRIBUTOR AND P.PJP = PT.PJP 
       LEFT JOIN #PJP_PROD PP ON PP.COMPANY = P.COMPANY AND PP.DISTRIBUTOR = P.DISTRIBUTOR AND PP.PJP = P.PJP  
       LEFT JOIN #LPPC LP ON PP.COMPANY = LP.COMPANY AND PP.DISTRIBUTOR = LP.DISTRIBUTOR AND PP.PJP = LP.PJP 
       GROUP BY P.COMPANY,P.DISTRIBUTOR, P.PJP
)





, c as (SELECT COMPANY,DISTRIBUTOR, PJP,CAST(FCS6ECR1 AS DECIMAL(18,2))FCS6ECR1,CAST(FCS6ECR2 AS DECIMAL(18,2))FCS6ECR2,CAST(FCS6ECR4 AS DECIMAL(18,2))FCS6ECR4
,CAST(FCS6BPR1 AS DECIMAL(18,2))FCS6BPR1,CAST(FCS6BPR2 AS DECIMAL(18,2))FCS6BPR2,CAST(FCS6BPR4 AS DECIMAL(18,2))FCS6BPR4,CAST(FCS6LPR1 AS DECIMAL(18,2))FCS6LPR1,CAST(FCS6LPR2 AS DECIMAL(18,2))FCS6LPR2
,CAST(FCS6LPR3 AS DECIMAL(18,2))   FCS6LPR3, CAST(FCS6RR4 AS DECIMAL(18,2))FCS6RR4
,CAST(0 AS DECIMAL(18,2)) FCS6BPR3,CAST(0  AS DECIMAL(18,2))FCS6BPR5
,CAST(0  AS DECIMAL(18,2)) FCS6BPR6,CAST(0  AS DECIMAL(18,2))FCS6BPR7,CAST(0  AS DECIMAL(18,2))FCS6ECR3
,CAST(0  AS DECIMAL(18,2))FCS6ECR5,CAST(0  AS DECIMAL(18,2))FCS6ECR6
,CAST(0 AS DECIMAL(18,2)) FCS6LPR4,CAST(0  AS DECIMAL(18,2))FCS6LPR5,CAST(0  AS DECIMAL(18,2))FCS6LPR6
,CAST(0  AS DECIMAL(18,2))FCS6RR1,CAST(0  AS DECIMAL(18,2))FCS6RR2
,CAST(0 AS DECIMAL(18,2))  FCS6RR3,CAST(0  AS DECIMAL(18,2))FCS6RR5
FROM FOURTEENKPI )
SELECT * INTO #FINALDATA_PJP FROM C




DECLARE @QRY VARCHAR(MAX)
SELECT @QRY = ''
DECLARE CEXECQRY CURSOR FOR
SELECT 'UPDATE PK SET '+KPI_ID +' = '+KPI_FORMULA+' FROM #FINALDATA_PJP PK;' FROM MIS_KPI WHERE COMPANY = @COMPANY AND FIELD_GROUP = @FIELD_GROUP AND KPI_FORMULA <>'NULL' AND KPI_TYPE = 'D' ORDER BY PROCESS_INDEX

OPEN CEXECQRY
FETCH NEXT FROM CEXECQRY INTO @QRY
WHILE @@FETCH_STATUS = 0 
      BEGIN 
      EXEC (@QRY)
      
      SELECT @QRY = ''
      
      FETCH NEXT FROM CEXECQRY INTO @QRY
      END
CLOSE CEXECQRY;
DEALLOCATE CEXECQRY;


with kpi as
(
SELECT COMPANY,DISTRIBUTOR,PJP, KPI_ID, KPI_VALUE 
FROM #FINALDATA_PJP
UNPIVOT (KPI_VALUE FOR KPI_ID 
IN (
FCS6ECR1 ,FCS6ECR2 ,FCS6ECR4 
,FCS6BPR1 ,FCS6BPR2 ,FCS6BPR4 
,FCS6LPR1 ,FCS6LPR2 ,FCS6LPR3 
,FCS6RR4  ,FCS6BPR3 ,FCS6BPR5
,FCS6BPR6 ,FCS6BPR7 ,FCS6ECR3
,FCS6ECR5 ,FCS6ECR6 ,FCS6LPR4
,FCS6LPR5 ,FCS6LPR6 ,FCS6RR1
,FCS6RR2  ,FCS6RR3  ,FCS6RR5)
) UP
)
SELECT * INTO #KPI FROM KPI; 


IF NOT EXISTS(SELECT 1 FROM DISTRIBUTOR A WHERE EXISTS(SELECT 1 FROM APPLICATION_SETUP B WHERE PARAMETER_ID='HEAD_DIST' AND A.DISTRIBUTOR=B.PARAMETER_VALUE))
DELETE FROM MIS_KPI_DATA WHERE COMPANY = @COMPANY AND KPI_DATA_ID LIKE @YEARJC+@DISTRIBUTOR+'%' AND EXISTS (SELECT 1 FROM MIS_KPI K WHERE K.COMPANY = MIS_KPI_DATA.COMPANY AND K.KPI_ID = MIS_KPI_DATA.KPI_ID AND K.FIELD_GROUP = @FIELD_GROUP);


;with
KPI_pjp_DT AS
(
              SELECT A.COMPANY , A.KPI_ID
              , 'KPI_ID~YEAR~JCNO~DISTRIBUTOR~PJP' TS_FIELD_COMB
              , A.KPI_ID+'~'+@YEAR+'~'+@JCNO+'~'+A.DISTRIBUTOR+'~'+a.PJP TS_FIELD_VALUE
              , A.KPI_VALUE KPI_RETURN_VALUE, NULL KPI_RETURN_DESC , NULL KPI_RETURN_IMAGE_URL
              , 'KPI_ID~YEAR~JCNO~DISTRIBUTOR~PJP' FIELD_COMB
              , a.KPI_ID COLUMN01,@YEAR COLUMN02,@JCNO COLUMN03,A.DISTRIBUTOR COLUMN04
              , A.PJP COLUMN05,'' COLUMN06, ''  COLUMN07  , '' COLUMN08, '' COLUMN09, '' COLUMN10 
              , NULL KPI_RANGE_FROM, NULL KPI_RANGE_TO
              FROM #kpi A INNER JOIN MIS_KPI B 
              ON A.COMPANY = B.COMPANY 
              AND A.KPI_ID = B.KPI_ID AND B.FIELD_GROUP = @FIELD_GROUP
              where a.kpi_id not in ('FCS6RR1','FCS6RR2','FCS6RR3','FCS6RR4','FCS6RR5')
)

, KPI_dist_DT AS
(
              SELECT A.COMPANY , A.KPI_ID
              , 'KPI_ID~YEAR~JCNO~DISTRIBUTOR' TS_FIELD_COMB
              , A.KPI_ID+'~'+@YEAR+'~'+@JCNO+'~'+A.DISTRIBUTOR+'~'+a.PJP TS_FIELD_VALUE
              , A.KPI_VALUE KPI_RETURN_VALUE, NULL KPI_RETURN_DESC , NULL KPI_RETURN_IMAGE_URL
              , 'KPI_ID~YEAR~JCNO~DISTRIBUTOR' FIELD_COMB
              , a.KPI_ID COLUMN01,@YEAR COLUMN02,@JCNO COLUMN03,A.DISTRIBUTOR COLUMN04
              , A.PJP COLUMN05,'' COLUMN06, ''  COLUMN07  , '' COLUMN08, '' COLUMN09, '' COLUMN10 
              , NULL KPI_RANGE_FROM, NULL KPI_RANGE_TO
              FROM #kpi A INNER JOIN MIS_KPI B 
              ON A.COMPANY = B.COMPANY 
              AND A.KPI_ID = B.KPI_ID AND B.FIELD_GROUP = @FIELD_GROUP
              where a.kpi_id in ('FCS6RR1','FCS6RR2','FCS6RR3','FCS6RR4','FCS6RR5')
)

, kpi_dt as
(
select * from KPI_dist_DT
union all
select * from KPI_pjp_DT
)

insert into MIS_KPI_DATA (COMPANY,KPI_DATA_ID,KPI_ID,TS_FIELD_COMB,TS_FIELD_VALUE,KPI_RETURN_VALUE,KPI_RETURN_DESC
       ,KPI_RETURN_IMAGE_URL,FIELD_COMB,COLUMN01,COLUMN02,COLUMN03,COLUMN04,COLUMN05,COLUMN06,COLUMN07,COLUMN08
       ,COLUMN09,COLUMN10, KPI_RANGE_FROM, KPI_RANGE_TO )
SELECT A.COMPANY , @YEARJC+@DISTRIBUTOR+'F6'+ RIGHT('00000000000000000000'+ CAST( (0 + ROW_NUMBER() OVER(ORDER BY A.COLUMN02 ,A.COLUMN03 ,A.COLUMN04 ,A.COLUMN05 ,A.COLUMN06 ,A.COLUMN07 ,A.COLUMN08 ,A.COLUMN09 ,A.COLUMN10,A.COLUMN01)) AS VARCHAR) ,20-LEN(@YEARJC+@DISTRIBUTOR)-2) KPI_DATA_ID 
       , A.KPI_ID, A.TS_FIELD_COMB , A.TS_FIELD_VALUE , A.KPI_RETURN_VALUE, A.KPI_RETURN_DESC, A.KPI_RETURN_IMAGE_URL 
       , A.FIELD_COMB , A.COLUMN01 ,A.COLUMN02 ,A.COLUMN03 ,A.COLUMN04 ,A.COLUMN05 ,A.COLUMN06 ,A.COLUMN07 ,A.COLUMN08 
       ,A.COLUMN09 ,A.COLUMN10 , KPI_RANGE_FROM, KPI_RANGE_TO 
       FROM kpi_dt a;


