
SET DATEFIRST 1;
DECLARE @COMPANY VARCHAR(10), @DISTRIBUTOR VARCHAR(10), @PROCESS_DATE DATETIME, @YEAR VARCHAR(4), @JCNO VARCHAR(2)
,@JCSDATE DATETIME, @JCEDATE DATETIME, @YEARJC VARCHAR(4) ,@FIELD_GROUP VARCHAR(MAX)
,@STARTTIME NUMERIC,@ENDTIME NUMERIC
,@MAXORDERTIME NUMERIC,@MAXMARKETTIME NUMERIC
,@MAXDISTGEO NUMERIC/*DISTANCE IN METRES*/
,@PJPTGTVISIT NUMERIC,@PJPTGTGEO NUMERIC/*GEO PERCENTAGE*/
,@PJPTGTEFOS NUMERIC
,@DISTTGTEFOS NUMERIC,@STARTTIMEORG NUMERIC,@ENDTIMEORG NUMERIC
,@TGTORDERTIME NUMERIC,@EFFORDERTIME NUMERIC;;

/*SELECT @COMPANY = '03' , @DISTRIBUTOR = '98681001' , @PROCESS_DATE = CONVERT(DATETIME,'20150615',103),@FIELD_GROUP='802';*/


      
SELECT @COMPANY = '$COMPANY$' , @DISTRIBUTOR = '$DISTRIBUTOR$' , @PROCESS_DATE = CONVERT(DATETIME,'$PROCESS_DATE$',103),@FIELD_GROUP='802';

declare @rptKPI4SV tinyint = 1;
select @rptKPI4SV = parameter_value
from application_Setup where company = @company and parameter_id = 'rptKPI4SV' and parameter_value is not null;


SELECT @YEAR = JC.YEAR, @JCNO = JC.JCNO , @JCSDATE = JC.START_DATE, @JCEDATE = JC.END_DATE ,@YEARJC =  RIGHT(YEAR,2)+JCNO 
FROM J_CYCLE JC 
WHERE JC.COMPANY = @COMPANY AND  CONVERT(DATETIME,@PROCESS_DATE,103) BETWEEN JC.START_DATE AND JC.END_DATE;


IF OBJECT_ID('TEMPDB..#TEMP_POLICY_TS') IS NOT NULL DROP TABLE #TEMP_POLICY_TS;
IF OBJECT_ID('TEMPDB..#FINALDATA_PJP') IS NOT NULL   DROP TABLE #FINALDATA_PJP;
IF OBJECT_ID('TEMPDB..#CASHMEMO') IS NOT NULL   DROP TABLE #CASHMEMO;


WITH 
POL AS 
 (SELECT P.COMPANY, P.POLICY_ID, PD.VALUE_COMB_FROM KPI_ID 
 FROM POLICY P INNER JOIN POLICY_DETAIL PD 
 ON P.COMPANY = PD.COMPANY AND P.POLICY_ID = PD.POLICY_ID 
 WHERE p.company = @company and P.FIELD_GROUP = @FIELD_GROUP AND P.STATUS = 1 AND PD.FIELD_COMB = 'KPI_ID')

, POL_QDST AS 
 (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM DISTRIBUTOR 
 FROM POL A inner JOIN POLICY_DETAIL PD 
 ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'DISTRIBUTOR')


, POL_QJC AS 
 (SELECT A.COMPANY, A.POLICY_ID, PD.VALUE_COMB_FROM [YEAR~JCNO] 
 FROM POL A inner JOIN POLICY_DETAIL PD 
 ON A.COMPANY = PD.COMPANY AND A.POLICY_ID = PD.POLICY_ID AND PD.FIELD_COMB = 'YEAR~JCNO')


, POL_FC AS 
 (
SELECT P.COMPANY,P.POLICY_ID, isnull(cast('KPI_ID~YEAR~JCNO~DISTRIBUTOR' as varchar(100)),'') TS_FIELD_COMB
,isnull(cast( P.KPI_ID+'~'+C.[YEAR~JCNO] + '~'+A.DISTRIBUTOR as varchar(100)),'') TS_FIELD_VALUE, PS.SLAB_ID
, PS.RANGE_FROM, PS.RANGE_TO, PS.RETURN_VALUE,PS.RETURN_DESC, PS.RETURN_IMAGE_URL 
 FROM POL P JOIN POL_QDST A 
 ON P.COMPANY = A.COMPANY AND P.POLICY_ID = A.POLICY_ID 
 JOIN POL_QJC C 
 ON P.COMPANY = C.COMPANY AND P.POLICY_ID = C.POLICY_ID 
 JOIN POLICY_SLAB PS 
 ON P.COMPANY = PS.COMPANY AND P.POLICY_ID = PS.POLICY_ID 
 WHERE P.COMPANY = @COMPANY AND A.DISTRIBUTOR = @DISTRIBUTOR 
 AND C.[YEAR~JCNO] = @YEAR + '~' + @JCNO
)


SELECT *  

INTO #TEMP_POLICY_TS FROM POL_FC;

alter table #TEMP_POLICY_TS  add primary key (COMPANY,policy_id, TS_FIELD_COMB, TS_FIELD_VALUE,slab_id);

SELECT @STARTTIME=MIN(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR01~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;
  
SELECT @STARTTIMEORG=@STARTTIME;

SELECT @ENDTIME =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR02~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;
  
SELECT @ENDTIMEORG=@ENDTIME  ;

SELECT @TGTORDERTIME =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR03~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;  

SELECT @MAXMARKETTIME  =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR04~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;
  
SELECT @MAXORDERTIME =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR05~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;
  
SELECT @EFFORDERTIME =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR06~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;    

SELECT @MAXDISTGEO  =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR08~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;

SELECT @PJPTGTVISIT  =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR09~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;  

SELECT @PJPTGTGEO =MAX(RANGE_FROM) FROM #TEMP_POLICY_TS  WHERE TS_FIELD_COMB='KPI_ID~YEAR~JCNO~DISTRIBUTOR'
  AND TS_FIELD_VALUE = 'EDTR10~'+@YEAR + '~' + @JCNO +'~'+@DISTRIBUTOR ;
  
 

IF (@STARTTIME IS NOT NULL AND @ENDTIME IS NOT NULL)
BEGIN
  
SELECT @STARTTIME = CASE WHEN @STARTTIME > 2359 THEN 2359 ELSE @STARTTIME END
,@STARTTIME=CAST(@STARTTIME/100 AS INT) * 60 + CASE WHEN @STARTTIME%100 > 59 THEN 59 ELSE @STARTTIME%100 END
,@ENDTIME = CASE WHEN @ENDTIME > 2359 THEN 2359 ELSE @ENDTIME END
,@ENDTIME =CAST(@ENDTIME /100 AS INT) * 60 + CASE WHEN @ENDTIME %100 > 59 THEN 59 ELSE @ENDTIME %100 END;



with sale as

(
SELECT CM.COMPANY, CM.DISTRIBUTOR, CM.PJP,cm.town,cm.locality,cm.slocality,cm.pop
, CM.DOC_DATE
, CD.SKU
, SUM(case @rptKPI4SV 
                  when 1 then  isnull(CD.AMOUNT,0) 
                  when 2 then isnull(cd.amount,0)+ isnull(cd.discount,0) 
                  when 3 then isnull(cd.amount,0)+ isnull(cd.discount,0) + isnull(cd.gst,0)
                  when 4 then isnull(cd.amount,0)+ isnull(cd.gst,0)
                  else 0 end
      ) TOTALSALES 
 ,case when sum(cd.AMOUNT)>0 then 1 else null end LINECOUNT
from cashmemo CM 
 INNER JOIN 
 (
      select company,distributor,document,sub_document,doc_no,SKU, amount, gst, 0 discount
      from cashmemo_detail WHERE COMPANY=@COMPANY AND DISTRIBUTOR=@DISTRIBUTOR 
      union all
      select company,distributor,document,sub_document,doc_no,SKU, 0 amount, gst, discount
      from scheme_discount_Detail WHERE COMPANY=@COMPANY AND DISTRIBUTOR=@DISTRIBUTOR 
      union all
      select company,distributor,document,sub_document,doc_no,SKU, 0 amount, gst, 0 discount
      from scheme_sku WHERE COMPANY=@COMPANY AND DISTRIBUTOR=@DISTRIBUTOR 
 ) CD

 ON CM.COMPANY = CD.COMPANY AND CM.DISTRIBUTOR = CD.DISTRIBUTOR AND CM.DOCUMENT = CD.DOCUMENT  AND CM.SUB_DOCUMENT = CD.SUB_DOCUMENT AND CM.DOC_NO = CD.DOC_NO 
 
 AND CM.COMPANY=@COMPANY AND CM.DISTRIBUTOR=@DISTRIBUTOR AND CM.DOCUMENT='CM' 
 AND 
 ( 
  ( 
   CM.VISIT_TYPE<>'88' AND cm.DOC_DATE BETWEEN @JCSDATE AND @JCEDATE AND CM.SUB_DOCUMENT='01'
  )
  or 
  (
   CM.VISIT_TYPE='02' and CM.SUB_DOCUMENT in ('02','04') and cm.delv_date between @JCSDATE AND @JCEDATE 
   
  )
)
GROUP BY    
 CM.COMPANY, CM.DISTRIBUTOR, CM.PJP,CD.SKU,CM.DOC_DATE,cm.town,cm.locality,cm.slocality,cm.pop

)


,SKUCOUNT AS
(
SELECT COMPANY, DISTRIBUTOR, PJP, DOC_DATE,SUM(TOTALSALES) TOTALSALES,COUNT(LINECOUNT) LINECOUNT
FROM sale
GROUP BY COMPANY, DISTRIBUTOR, PJP, DOC_DATE
)
SELECT * into #CASHMEMO  from SKUCOUNT;

WITH P_STATUS AS 
(
SELECT PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP, PS.STATUS_DATE 
 ,MIN(PS.SCHEDULED)SCHEDULED
FROM POP_STATUS PS
INNER JOIN DISTRIBUTOR D ON D.COMPANY=PS.COMPANY AND D.DISTRIBUTOR=PS.DISTRIBUTOR 
 INNER JOIN POP P ON P.COMPANY=PS.COMPANY AND P.DISTRIBUTOR=PS.DISTRIBUTOR AND  P.TOWN=PS.TOWN AND P.LOCALITY=PS.LOCALITY AND  P.SLOCALITY=PS.SLOCALITY AND P.POP=PS.POP 
 WHERE PS.COMPANY=@COMPANY AND PS.DISTRIBUTOR=@DISTRIBUTOR AND STATUS_DATE BETWEEN @JCSDATE AND @JCEDATE
GROUP BY PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.TOWN, PS.LOCALITY, PS.SLOCALITY, PS.POP, PS.STATUS_DATE
)

,P_STATUS2 AS 
(
SELECT  PS.COMPANY, PS.DISTRIBUTOR, PS.PJP,  PS.STATUS_DATE
, COUNT(CASE WHEN (SCHEDULED = 1 OR SCHEDULED = 0) THEN 1 ELSE NULL END) PLANNED_CALLS  
 FROM P_STATUS PS 
 GROUP BY PS.COMPANY, PS.DISTRIBUTOR, PS.PJP,  PS.STATUS_DATE
)

,P_S_DETAIL AS 
(
SELECT PSD.COMPANY, PSD.DISTRIBUTOR, PSD.PJP, PSD.TOWN, PSD.LOCALITY, PSD.SLOCALITY, PSD.POP, PSD.STATUS_DATE 
 ,CASE WHEN MIN(psd.STATUS_TIME)<DATEADD(MI,@STARTTIME,PSD.STATUS_DATE) THEN DATEADD(MI,@STARTTIME,PSD.STATUS_DATE)  ELSE MIN(psd.STATUS_TIME) END STATUS_TIME
,CASE WHEN MAX(psd.EXIT_TIME)>DATEADD(MI,@ENDTIME,PSD.STATUS_DATE) THEN DATEADD(MI,@ENDTIME,PSD.STATUS_DATE) ELSE MAX(psd.EXIT_TIME) END EXIT_TIME

,SUM(psd.TOTAL_VISIT_TIME)TOTAL_VISIT_TIME
,MIN(psd.VISIT_DISTANCE) VISIT_DISTANCE 
 
 ,MIN(PS.SCHEDULED) SCHEDULED
,MAX(CASE WHEN (ps.SCHEDULED = 1 OR ps.SCHEDULED = 0) THEN 1 ELSE NULL END) COMP_CALLS
,1 ACT_CALLS

FROM POP_STATUS_DETAIL PSD
INNER JOIN P_STATUS PS ON PSD.COMPANY=PS.COMPANY AND PSD.DISTRIBUTOR=PS.DISTRIBUTOR
AND PS.PJP=PSD.PJP AND  PS.TOWN=PSD.TOWN AND  PS.LOCALITY=PSD.LOCALITY AND  PS.SLOCALITY=PSD.SLOCALITY AND  PS.POP= PSD.POP AND PS.STATUS_DATE=PSD.STATUS_DATE 
 GROUP BY PSD.COMPANY, PSD.DISTRIBUTOR, PSD.PJP, PSD.TOWN, PSD.LOCALITY, PSD.SLOCALITY, PSD.POP, PSD.STATUS_DATE
HAVING MIN(psd.EXIT_TIME)>DATEADD(MI,@STARTTIME,PSD.STATUS_DATE)  AND MIN(psd.STATUS_TIME)<DATEADD(MI,@ENDTIME,PSD.STATUS_DATE) 
)

,P_S_DETAIL1 AS 
(
SELECT COMPANY, DISTRIBUTOR, PJP, TOWN, LOCALITY, SLOCALITY, POP, STATUS_DATE
,STATUS_TIME,EXIT_TIME
,SCHEDULED
,COMP_CALLS
,ACT_CALLS
, CASE WHEN CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,STATUS_TIME,EXIT_TIME))/60)>TOTAL_VISIT_TIME THEN TOTAL_VISIT_TIME ELSE CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,STATUS_TIME,EXIT_TIME))/60) END TOTAL_VISIT_TIME 

,CASE WHEN  
  CASE WHEN CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,STATUS_TIME,EXIT_TIME))/60)>TOTAL_VISIT_TIME THEN TOTAL_VISIT_TIME ELSE CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,STATUS_TIME,EXIT_TIME))/60) END >@MAXORDERTIME 
 THEN @EFFORDERTIME 
 ELSE 
  CASE WHEN CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,STATUS_TIME,EXIT_TIME))/60)>TOTAL_VISIT_TIME THEN TOTAL_VISIT_TIME ELSE CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,STATUS_TIME,EXIT_TIME))/60) END
END EFFECTIVE_VISIT_TIME 
 
 ,CASE WHEN VISIT_DISTANCE <=@MAXDISTGEO and COMP_CALLS is not null THEN 1 ELSE NULL END VISIT_DISTANCE
,CASE WHEN VISIT_DISTANCE <=@MAXDISTGEO THEN 1 ELSE NULL END ACT_VISIT_DISTANCE

FROM  P_S_DETAIL 
)


,P_S_DETAIL2 AS 
(
SELECT P.COMPANY, P.DISTRIBUTOR, P.PJP,  P.STATUS_DATE
, MIN(P.STATUS_TIME)STATUS_TIME
, MAX(P.EXIT_TIME)EXIT_TIME 
 , COUNT(COMP_CALLS) COMP_CALLS
, COUNT(ACT_CALLS) ACT_CALLS  
 , count(VISIT_DISTANCE) VISIT_DISTANCE
, count(ACT_VISIT_DISTANCE) ACT_VISIT_DISTANCE
, CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,min(p.STATUS_TIME),max(p.EXIT_TIME)))/60)-SUM(P.TOTAL_VISIT_TIME)TRANSIT_TIME 
 , CEILING(CONVERT(NUMERIC(22,6),DATEDIFF(SECOND,min(p.STATUS_TIME),max(p.EXIT_TIME)))/60) TOTAL_MARKET_TIME 
 , SUM(P.EFFECTIVE_VISIT_TIME) TOTAL_ORDER_TIME 
  
 
 , MAX(A.TOTALSALES)TOTALSALES
, MAX(A.LINECOUNT)LINECOUNT
FROM  P_S_DETAIL1 P
LEFT JOIN #CASHMEMO  A ON A.COMPANY  = P.COMPANY AND A.DISTRIBUTOR = P.DISTRIBUTOR AND A.PJP = P.PJP AND A.DOC_DATE = P.STATUS_DATE
GROUP BY P.COMPANY, P.DISTRIBUTOR, P.PJP,  P.STATUS_DATE
)
, P_S_DETAIL3 AS 
(
SELECT 
 PS.COMPANY, PS.DISTRIBUTOR, PS.PJP, PS.STATUS_DATE

,cast(@STARTTIMEORG as decimal(18,2)) EDTR01
,cast(@ENDTIMEORG as decimal(18,2)) EDTR02  
 ,cast(@TGTORDERTIME  as decimal(18,2))EDTR03 
 ,cast(@MAXMARKETTIME  as decimal(18,2))EDTR04
,cast(@MAXORDERTIME  as decimal(18,2))EDTR05
,cast(@EFFORDERTIME  as decimal(18,2))EDTR06
,cast(@MAXDISTGEO  as decimal(18,2))EDTR08
,cast(@PJPTGTVISIT  as decimal(18,2))EDTR09
,cast(@PJPTGTGEO  as decimal(18,2))EDTR10 

,cast(PSD.TOTAL_MARKET_TIME as decimal(18,2))EDTSR02
,cast(PSD.TOTAL_ORDER_TIME as decimal(18,2))EDTSR01
,cast(psd.TRANSIT_TIME as decimal(18,2))EDTSR03
,cast(psd.COMP_CALLS  as decimal(18,2))EDPCR03
,cast(psd.ACT_CALLS  as decimal(18,2))EDPCR02
,cast(ps.PLANNED_CALLS as decimal(18,2))EDPCR01
,cast(psd.COMP_CALLS as decimal(18,2))EDGCR01
,cast(psd.VISIT_DISTANCE as decimal(18,2))EDGCR02 
 ,cast(psd.ACT_VISIT_DISTANCE as decimal(18,2)) EDGCR05 
 ,cast(psd.TOTALSALES as decimal(18,2))EDSAR01
,cast(psd.LINECOUNT as decimal(18,2))EDSAR02

,cast(0 as decimal(18,2)) EDTSR04
,cast(0 as decimal(18,2)) EDTSR05
,cast(0 as decimal(18,2)) EDTSR06
,cast(0 as decimal(18,2)) EDPCR04
,cast(0 as decimal(18,2)) EDPCR05
,cast(0 as decimal(18,2)) EDGCR03
,cast(0 as decimal(18,2)) EDGCR04
,cast(0 as decimal(18,2)) EDAY


FROM P_STATUS2 PS
inner JOIN P_S_DETAIL2 PSD ON PSD.COMPANY=PS.COMPANY AND PSD.DISTRIBUTOR=PS.DISTRIBUTOR AND PS.PJP=PSD.PJP AND PS.STATUS_DATE =PSD.STATUS_DATE
)


select * into #FINALDATA_PJP from P_S_DETAIL3;

DECLARE @QRY VARCHAR(MAX)
SELECT @QRY = ''
DECLARE CEXECQRY CURSOR FOR
SELECT 'UPDATE PK SET '+KPI_ID +' = '+KPI_FORMULA+' FROM #FINALDATA_PJP PK;' FROM MIS_KPI WHERE COMPANY = @COMPANY AND FIELD_GROUP = @FIELD_GROUP AND KPI_FORMULA is not NULL AND KPI_TYPE = 'D' ORDER BY PROCESS_INDEX

OPEN CEXECQRY
FETCH NEXT FROM CEXECQRY INTO @QRY
WHILE @@FETCH_STATUS = 0 
      BEGIN 
      EXEC (@QRY)
      
      SELECT @QRY = ''
      
      FETCH NEXT FROM CEXECQRY INTO @QRY
      END
CLOSE CEXECQRY;
DEALLOCATE CEXECQRY;

DELETE FROM MIS_KPI_DATA WHERE COMPANY = @COMPANY AND KPI_DATA_ID LIKE @YEARJC+@DISTRIBUTOR+'%' AND EXISTS (SELECT 1 FROM MIS_KPI K WHERE K.COMPANY = MIS_KPI_DATA.COMPANY AND K.KPI_ID = MIS_KPI_DATA.KPI_ID AND K.FIELD_GROUP = @FIELD_GROUP);

WITH PJP_day AS
(
SELECT COMPANY, @year year, @jcno JCNO,DISTRIBUTOR,PJP, STATUS_DATE, KPI_ID, KPI_VALUES FROM #FINALDATA_PJP
UNPIVOT
(
KPI_VALUES FOR KPI_ID IN (EDTR01,EDTR02,EDTR03,EDTR04,EDTR05,EDTR06,EDTR08,EDTR09,EDTR10,EDTSR02,EDTSR01,EDTSR03,EDPCR03,EDPCR02,EDPCR01,EDGCR01,EDGCR02,EDSAR01,EDSAR02,EDTSR04,EDTSR05,EDTSR06,EDPCR04,EDPCR05,EDGCR03,EDGCR04,EDGCR05,EDAY)
) U
)
, pjp_day_dt AS 
 (
  SELECT A.COMPANY , B.KPI_ID
  , 'KPI_ID~YEAR~JCNO~DISTRIBUTOR' TS_FIELD_COMB
  , B.KPI_ID+'~'+A.YEAR+'~'+A.JCNO+'~'+A.DISTRIBUTOR TS_FIELD_VALUE
  , A.KPI_VALUES KPI_RETURN_VALUE, NULL KPI_RETURN_DESC , NULL KPI_RETURN_IMAGE_URL
  , 'KPI_ID~YEAR~JCNO~DISTRIBUTOR~PJP~STATUS_DATE~MONTH,DAYNO' FIELD_COMB
  , B.KPI_ID COLUMN01,A.YEAR COLUMN02,A.JCNO COLUMN03,A.DISTRIBUTOR COLUMN04
  , A.PJP COLUMN05,convert(varchar,a.STATUS_DATE,103)  COLUMN06,DATEPART(MM,a.STATUS_DATE) COLUMN07  ,DATEPART(DD, a.STATUS_DATE) COLUMN08, '' COLUMN09, '' COLUMN10 
  , NULL KPI_RANGE_FROM, NULL KPI_RANGE_TO
  FROM PJP_day A INNER JOIN MIS_KPI B 
  ON A.COMPANY = B.COMPANY 
  AND A.KPI_ID = B.KPI_ID and b.field_group = @field_group
)

,MAX_KPI_DATA_ID AS 
 (SELECT ISNULL(SUBSTRING(MAX(KPI_DATA_ID),LEN(@YEARJC+@DISTRIBUTOR)+2,20) , 0) MAX_ID 
 FROM MIS_KPI_DATA 
 WHERE COMPANY = @COMPANY AND KPI_DATA_ID LIKE @YEARJC+@DISTRIBUTOR+'ED%' )



INSERT INTO MIS_KPI_DATA (COMPANY,KPI_DATA_ID,KPI_ID,TS_FIELD_COMB,TS_FIELD_VALUE,KPI_RETURN_VALUE,KPI_RETURN_DESC
,KPI_RETURN_IMAGE_URL,FIELD_COMB,COLUMN01,COLUMN02,COLUMN03,COLUMN04,COLUMN05,COLUMN06,COLUMN07,COLUMN08
,COLUMN09,COLUMN10, KPI_RANGE_FROM, KPI_RANGE_TO ) 
 SELECT A.COMPANY , @YEARJC+@DISTRIBUTOR+'ED'+ RIGHT('00000000000000000000'+ CAST( (C.MAX_ID + ROW_NUMBER() OVER(ORDER BY A.COLUMN02 ,A.COLUMN03 ,A.COLUMN04 ,A.COLUMN05 ,A.COLUMN06 ,A.COLUMN07 ,A.COLUMN08 ,A.COLUMN09 ,A.COLUMN10,A.COLUMN01)) AS VARCHAR) ,20-LEN(@YEARJC+@DISTRIBUTOR)-2) KPI_DATA_ID 
 , A.KPI_ID, A.TS_FIELD_COMB , A.TS_FIELD_VALUE , A.KPI_RETURN_VALUE, A.KPI_RETURN_DESC, A.KPI_RETURN_IMAGE_URL 
 , A.FIELD_COMB , A.COLUMN01 ,A.COLUMN02 ,A.COLUMN03 ,A.COLUMN04 ,A.COLUMN05 ,A.COLUMN06 ,A.COLUMN07 ,A.COLUMN08 
 ,A.COLUMN09 ,A.COLUMN10 , KPI_RANGE_FROM, KPI_RANGE_TO 
 FROM pjp_day_dt A CROSS JOIN MAX_KPI_DATA_ID C 
 ;
END;